
.EXPORT_ALL_VARIABLES:

ifeq ($(CGO_ENABLED),)
	CGO_ENABLED := 1
endif

ifeq ($(GO111MODULE),)
	GO111MODULE := on
endif

target := buildinfo

gofiles := $(wildcard *.go)

define LDFLAGS
-ldflags \
'-X "main.BuildDate=$(shell date -u '+%Y-%m-%d %H:%M:%SZ')" \
-X "main.GitCommit=$(shell git rev-list --abbrev=8 --abbrev-commit -1 HEAD)" \
-X "main.GitBranch=$(shell git rev-parse --abbrev-ref HEAD)" \
-X "main.GitSummary=$(shell git describe --dirty --long --tags --always)"'
endef

GO_BUILD_FLAGS := $(GO_BUILD_FLAGS) -buildvcs=true -mod=mod -modcacherw

.PHONY: all fmt vet fix clean build tidy env install rebuild
all: tidy fmt vet fix $(target)

fmt:
	go fmt -x

vet:
	go vet

fix:
	go fix

clean:
	go clean

build: $(target)

rebuild: clean
	$(MAKE) GO_BUILD_FLAGS="-a" build

tidy:
	go mod tidy

install: $(gofiles)
	go install $(LDFLAGS) $(GO_BUILD_FLAGS)

run-self: rebuild
	./$(target) --self

.ONESHELL:
$(target): $(gofiles)
	go build -o $(target) $(LDFLAGS) $(GO_BUILD_FLAGS)
	chmod +x $(target)
